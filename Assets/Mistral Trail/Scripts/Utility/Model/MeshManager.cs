/*
 ### Mistral Model ###
 Author: Jingping Yu
 RTX: joshuayu
 Created on: 2017/07/11
 */

using System;
using System.IO;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

using Mistral.Utility.FileX;

namespace Mistral.Utility.Model
{
	/// <summary>
	/// This Class handles the storage of the Meshes Generated By Mistral Trail Renderer(MTR). 
	/// </summary>
	public static class MeshManager 
	{
		#region Paths

		/// <summary>
		/// Where the Meshes are stored. 
		/// Since Application.dataPath is not a const. We can only use static here. 
		/// Don't fucking temper with it! 
		/// </summary>
		private static string MESH_PATH = Application.dataPath + "/MTR Generated/";

		#endregion

		#region Private Variables

		private static bool isInitialized = false;

		#endregion

		#region Public Interfaces

		public static void SaveMeshToResource(Mesh mesh, string fileName)
		{
			if (!isInitialized)
			{
				Initialize();
			}
			///Check if the Mesh exists
			string path = MESH_PATH + fileName + ".mtrmesh";
			if (File.Exists(path))
			{
				File.Delete(path);
				Debug.Log("The file already exists. Hence it is now overwritten. GL & HF! ");
			}

			byte[] bytes = MeshSerializer.WriteMesh(mesh, true);
			File.WriteAllBytes(path, bytes);
		}

		#endregion

		#region Private Methods

		private static void Initialize()
		{
			FileManager.TryCreateDirectory(MESH_PATH);
			isInitialized = true;
		}

		#endregion
	}

}
